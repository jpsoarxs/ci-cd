pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        AWS_ACCOUNT_ID = '635101881545'
        ECR_REPO = 'express-prod'
        IMAGE_TAG = 'latest'
        PEM_FILE = credentials('aws-prod-ec2-pem-file')
        SSH_USER = 'ec2-user'
        SSH_PORT = '22'
        EC2_INSTANCE_IP = '54.209.124.70'
    }

    stages {

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build APP') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build Docker image') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: "aws-jenkins-demo",
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 635101881545.dkr.ecr.us-east-1.amazonaws.com"
                    sh "docker build -t ${ECR_REPO}:${IMAGE_TAG} ."
                    sh "docker tag ${ECR_REPO}:${IMAGE_TAG} 635101881545.dkr.ecr.us-east-1.amazonaws.com/${ECR_REPO}:${IMAGE_TAG}"
                }
            }
        }

        stage('Push Docker image to ECR') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: "aws-jenkins-demo",
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 635101881545.dkr.ecr.us-east-1.amazonaws.com"
                    sh "docker push 635101881545.dkr.ecr.us-east-1.amazonaws.com/${ECR_REPO}:${IMAGE_TAG}"
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    sshagent(credentials: ['aws-jenkins-demo']) {
                       sh "ssh -t -t -o StrictHostKeyChecking=no ec2-user@ec2-54-209-124-70.compute-1.amazonaws.com"
                    }
                }
            }
        }

    }
}